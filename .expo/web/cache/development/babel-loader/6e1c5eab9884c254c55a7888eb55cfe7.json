{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\franc\\\\Desktop\\\\4to Cuatri - Da Vinci\\\\Aplicaciones M\\xF3viles\\\\app-coingecko\\\\App.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\n\nvar App = function App() {\n  var loadData = function loadData() {\n    var res, data;\n    return _regeneratorRuntime.async(function loadData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false'));\n\n          case 2:\n            res = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(res.json());\n\n          case 5:\n            data = _context.sent;\n            console.log(data);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    loadData();\n  }, []);\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, \"Helo World\"));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/franc/Desktop/4to Cuatri - Da Vinci/Aplicaciones MÃ³viles/app-coingecko/App.js"],"names":["React","useEffect","App","loadData","fetch","res","json","data","console","log"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;;AAIA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;AAEf,MAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACEC,KAAK,CAAC,0HAAD,CADP;;AAAA;AACVC,YAAAA,GADU;AAAA;AAAA,6CAEGA,GAAG,CAACC,IAAJ,EAFH;;AAAA;AAEVC,YAAAA,IAFU;AAGhBC,YAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AAHgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAODN,EAAAA,SAAS,CAAC,YAAM;AACbE,IAAAA,QAAQ;AACV,GAFQ,EAEN,EAFM,CAAT;AAKA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CADF;AAKD,CAnBD;;AAqBA,eAAeD,GAAf","sourcesContent":["import React, {useEffect} from 'react'\n// Cuando cargue la app, quiero hacer una peticion GET --> Usamos useEffect\nimport { View, Text } from 'react-native'\n\nconst App = () => {\n\n   const loadData = async () => {\n    const res = await fetch('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false');\n    const data = await res.json();\n    console.log(data);\n   }\n   // await --> peticion asincrona. Para que funcione await, debe estar en una funcion async\n\n  useEffect(() => {\n     loadData();\n  }, []) //Lo ejecutamos con un array en blanco para avisarle que no esta basado en ningun cambio\n  // A penas cargue este componente App, se va a ejecutar lo que escribamos aca adentro\n\n  return (\n    <View>\n      <Text>Helo World</Text>\n    </View>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}