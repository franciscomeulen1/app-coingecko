{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\franc\\\\Desktop\\\\4to Cuatri - Da Vinci\\\\Aplicaciones M\\xF3viles\\\\app-coingecko\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nvar Stack = createNativeStackNavigator();\nimport { HomeScreen } from \"./Screens/HomeScreen\";\nimport { CriptosScreen } from \"./Screens/CriptosScreen\";\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(NavigationContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 7\n        }\n      }, React.createElement(Stack.Navigator, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 9\n        }\n      }, React.createElement(Stack.Screen, {\n        name: \"Home\",\n        component: HomeScreen,\n        options: {\n          headerStyle: {\n            backgroundColor: '#242324'\n          },\n          headerTintColor: '#FFFFFF',\n          headerTitleStyle: {\n            fontWeight: 'bold'\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Criptos\",\n        component: CriptosScreen,\n        options: {\n          headerStyle: {\n            backgroundColor: '#000000'\n          },\n          headerTintColor: '#FFFFFF',\n          headerTitleStyle: {\n            fontWeight: 'bold'\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#141414',\n    alignItems: 'center',\n    flex: 1\n  },\n  containerhome: {\n    flex: 1,\n    backgroundColor: 'black',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  buttonInicial: {\n    marginBottom: 150\n  },\n  welcome: {\n    color: '#fff',\n    fontSize: 30,\n    marginBottom: 50\n  },\n  title: {\n    color: '#fff',\n    fontSize: 20\n  },\n  list: {\n    width: '90%'\n  },\n  header: {\n    flexDirection: 'row',\n    marginTop: 25,\n    marginBottom: 20,\n    justifyContent: 'space-between',\n    width: '90%'\n  },\n  searchInput: {\n    color: '#fff',\n    borderBottomColor: '#4657CE',\n    borderBottomWidth: 1,\n    width: '40%',\n    textAlign: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/franc/Desktop/4to Cuatri - Da Vinci/Aplicaciones MÃ³viles/app-coingecko/App.js"],"names":["React","Component","NavigationContainer","createNativeStackNavigator","Stack","HomeScreen","CriptosScreen","App","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","fontWeight","styles","StyleSheet","create","container","alignItems","flex","containerhome","justifyContent","buttonInicial","marginBottom","welcome","color","fontSize","title","list","width","header","flexDirection","marginTop","searchInput","borderBottomColor","borderBottomWidth","textAlign"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAIA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AAEA,IAAMC,KAAK,GAAGD,0BAA0B,EAAxC;AAEA,SAAQE,UAAR;AACA,SAAQC,aAAR;;IAEqBC,G;;;;;;;;;;;;;WACnB,kBAAS;AACP,aACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD,CAAO,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAC,MAAnB;AAA0B,QAAA,SAAS,EAAEF,UAArC;AACA,QAAA,OAAO,EAAE;AACPG,UAAAA,WAAW,EAAC;AAACC,YAAAA,eAAe,EAAE;AAAlB,WADL;AAEPC,UAAAA,eAAe,EAAE,SAFV;AAGPC,UAAAA,gBAAgB,EAAE;AAChBC,YAAAA,UAAU,EAAE;AADI;AAHX,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAQE,oBAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAC,SAAnB;AAA6B,QAAA,SAAS,EAAEN,aAAxC;AACA,QAAA,OAAO,EAAE;AACPE,UAAAA,WAAW,EAAC;AAACC,YAAAA,eAAe,EAAE;AAAlB,WADL;AAEPC,UAAAA,eAAe,EAAE,SAFV;AAGPC,UAAAA,gBAAgB,EAAE;AAChBC,YAAAA,UAAU,EAAE;AADI;AAHX,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,CADF,CADF;AAoBD;;;;EAtB8BZ,KAAK,CAACC,S;;SAAlBM,G;AAyBrB,IAAMM,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTP,IAAAA,eAAe,EAAE,SADR;AAETQ,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,IAAI,EAAE;AAHG,GADoB;AAM/BC,EAAAA,aAAa,EAAE;AACbD,IAAAA,IAAI,EAAE,CADO;AAEbT,IAAAA,eAAe,EAAE,OAFJ;AAGbQ,IAAAA,UAAU,EAAE,QAHC;AAIbG,IAAAA,cAAc,EAAE;AAJH,GANgB;AAY/BC,EAAAA,aAAa,EAAC;AACZC,IAAAA,YAAY,EAAE;AADF,GAZiB;AAe/BC,EAAAA,OAAO,EAAC;AACNC,IAAAA,KAAK,EAAE,MADD;AAENC,IAAAA,QAAQ,EAAE,EAFJ;AAGNH,IAAAA,YAAY,EAAE;AAHR,GAfuB;AAoB/BI,EAAAA,KAAK,EAAE;AACLF,IAAAA,KAAK,EAAE,MADF;AAELC,IAAAA,QAAQ,EAAE;AAFL,GApBwB;AAwB/BE,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE;AADH,GAxByB;AA2B/BC,EAAAA,MAAM,EAAE;AACNC,IAAAA,aAAa,EAAE,KADT;AAENC,IAAAA,SAAS,EAAE,EAFL;AAGNT,IAAAA,YAAY,EAAE,EAHR;AAINF,IAAAA,cAAc,EAAE,eAJV;AAKNQ,IAAAA,KAAK,EAAE;AALD,GA3BuB;AAkC/BI,EAAAA,WAAW,EAAE;AACXR,IAAAA,KAAK,EAAE,MADI;AAEXS,IAAAA,iBAAiB,EAAE,SAFR;AAGXC,IAAAA,iBAAiB,EAAE,CAHR;AAIXN,IAAAA,KAAK,EAAE,KAJI;AAKXO,IAAAA,SAAS,EAAE;AALA;AAlCkB,CAAlB,CAAf","sourcesContent":["import React, { Component } from 'react';\n// Cuando cargue la app, quiero hacer una peticion GET --> Usamos useEffect\nimport { StyleSheet} from 'react-native';\n// El componente FlatList recibe un array y me permite recorrerlo de manera facil\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\n\nconst Stack = createNativeStackNavigator();\n\nimport {HomeScreen} from './Screens/HomeScreen';\nimport {CriptosScreen} from './Screens/CriptosScreen';\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <NavigationContainer>\n        <Stack.Navigator>\n          <Stack.Screen name=\"Home\" component={HomeScreen}\n          options={{\n            headerStyle:{backgroundColor: '#242324'},\n            headerTintColor: '#FFFFFF',\n            headerTitleStyle: {\n              fontWeight: 'bold'}\n          }}/>\n          <Stack.Screen name=\"Criptos\" component={CriptosScreen} \n          options={{ \n            headerStyle:{backgroundColor: '#000000'},\n            headerTintColor: '#FFFFFF',\n            headerTitleStyle: {\n              fontWeight: 'bold'} \n              }} />\n        </Stack.Navigator>\n      </NavigationContainer>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#141414',\n    alignItems: 'center',\n    flex: 1 // Para que me ocupe todo el tamanio de la pantalla\n  },\n  containerhome: {\n    flex: 1,\n    backgroundColor: 'black', \n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  buttonInicial:{\n    marginBottom: 150\n  },\n  welcome:{\n    color: '#fff',\n    fontSize: 30,\n    marginBottom: 50,\n  },\n  title: {\n    color: '#fff',\n    fontSize: 20\n  },\n  list: {\n    width: '90%' // Para que ocupe todo el ancho de la pantalla\n  },\n  header: {\n    flexDirection: 'row',\n    marginTop: 25,\n    marginBottom: 20,\n    justifyContent: 'space-between', // Para que 2 elementos de la misma row se separen a los extremos\n    width: '90%' // Para que ocupe todo el ancho de la pantalla\n  },\n  searchInput: {\n    color: '#fff',\n    borderBottomColor: '#4657CE',\n    borderBottomWidth: 1,\n    width: '40%', // Va a ocupar un 40% del contenedor\n    textAlign: 'center'\n  }\n})\n\n"]},"metadata":{},"sourceType":"module"}