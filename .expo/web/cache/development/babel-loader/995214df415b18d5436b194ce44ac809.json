{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\franc\\\\Desktop\\\\4to Cuatri - Da Vinci\\\\Aplicaciones M\\xF3viles\\\\app-coingecko\\\\App.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport CoinItem from \"./components/CoinItem\";\n\nvar App = function App() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      coins = _useState2[0],\n      setCoins = _useState2[1];\n\n  var loadData = function loadData() {\n    var res, data;\n    return _regeneratorRuntime.async(function loadData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false'));\n\n          case 2:\n            res = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(res.json());\n\n          case 5:\n            data = _context.sent;\n            setCoins(data);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    loadData();\n  }, []);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, React.createElement(StatusBar, {\n    backgroundColor: \"#141414\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.header,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, \"Cryptoman\\xEDa\"), React.createElement(TextInput, {\n    style: styles.searchInput,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  })), React.createElement(FlatList, {\n    style: styles.list,\n    data: coins,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(CoinItem, {\n        coin: item,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 18\n        }\n      });\n    },\n    showsVerticalScrollIndicator: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#141414',\n    alignItems: 'center',\n    flex: 1\n  },\n  title: {\n    color: '#fff',\n    marginTop: 50,\n    fontSize: 20\n  },\n  list: {\n    width: '90%'\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    width: '90%'\n  },\n  searchInput: {\n    color: '#fff',\n    borderBottomColor: '#4657CE',\n    borderBottomWidth: 1,\n    width: '40%',\n    textAlign: 'center'\n  }\n});\nexport default App;","map":{"version":3,"sources":["C:/Users/franc/Desktop/4to Cuatri - Da Vinci/Aplicaciones Móviles/app-coingecko/App.js"],"names":["React","useEffect","useState","CoinItem","App","coins","setCoins","loadData","fetch","res","json","data","styles","container","header","title","searchInput","list","item","StyleSheet","create","backgroundColor","alignItems","flex","color","marginTop","fontSize","width","flexDirection","justifyContent","borderBottomColor","borderBottomWidth","textAlign"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;;;;;;;AAIA,OAAOC,QAAP;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;AAGhB,kBAA0BF,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOG,KAAP;AAAA,MAAcC,QAAd;;AAEC,MAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACEC,KAAK,CAAC,0HAAD,CADP;;AAAA;AACVC,YAAAA,GADU;AAAA;AAAA,6CAEGA,GAAG,CAACC,IAAJ,EAFH;;AAAA;AAEVC,YAAAA,IAFU;AAGhBL,YAAAA,QAAQ,CAACK,IAAD,CAAR;;AAHgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAODV,EAAAA,SAAS,CAAC,YAAM;AACbM,IAAAA,QAAQ;AACV,GAFQ,EAEN,EAFM,CAAT;AAKA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEK,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,eAAe,EAAC,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,IAAD;AAAO,IAAA,KAAK,EAAED,MAAM,CAACE,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,MAAM,CAACG,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEH,MAAM,CAACI,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAFF,EAOE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEJ,MAAM,CAACK,IAAxB;AACE,IAAA,IAAI,EAAEZ,KADR;AAEE,IAAA,UAAU,EAAE,0BAAY;AAAA,UAAVa,IAAU,QAAVA,IAAU;AACtB,aAAO,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAEA,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAJH;AAME,IAAA,4BAA4B,EAAI,KANlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF;AAmBD,CApCD;;AAsCA,IAAMN,MAAM,GAAIO,UAAU,CAACC,MAAX,CAAkB;AAClCP,EAAAA,SAAS,EAAC;AACRQ,IAAAA,eAAe,EAAE,SADT;AAERC,IAAAA,UAAU,EAAE,QAFJ;AAGRC,IAAAA,IAAI,EAAE;AAHE,GADwB;AAMlCR,EAAAA,KAAK,EAAC;AACHS,IAAAA,KAAK,EAAE,MADJ;AAEHC,IAAAA,SAAS,EAAE,EAFR;AAGHC,IAAAA,QAAQ,EAAE;AAHP,GAN4B;AAWlCT,EAAAA,IAAI,EAAC;AACFU,IAAAA,KAAK,EAAE;AADL,GAX6B;AAclCb,EAAAA,MAAM,EAAC;AACLc,IAAAA,aAAa,EAAE,KADV;AAELC,IAAAA,cAAc,EAAE,eAFX;AAGLF,IAAAA,KAAK,EAAE;AAHF,GAd2B;AAmBlCX,EAAAA,WAAW,EAAC;AACVQ,IAAAA,KAAK,EAAE,MADG;AAEVM,IAAAA,iBAAiB,EAAE,SAFT;AAGVC,IAAAA,iBAAiB,EAAE,CAHT;AAIVJ,IAAAA,KAAK,EAAE,KAJG;AAKVK,IAAAA,SAAS,EAAE;AALD;AAnBsB,CAAlB,CAAhB;AA4BA,eAAe5B,GAAf","sourcesContent":["import React, {useEffect, useState} from 'react'\n// Cuando cargue la app, quiero hacer una peticion GET --> Usamos useEffect\nimport { View, Text, FlatList, StyleSheet, TextInput, StatusBar } from 'react-native'\n// El componente FlatList recibe un array y me permite recorrerlo de manera facil\nimport CoinItem from './components/CoinItem'\n\nconst App = () => {\n\n  //Creo un arreglo llamado coins. A ese arreglo lo va a rellenar la funcion setCoins. E inicialmente va a estar en blanco.\n  const [coins, setCoins] = useState([]); \n\n   const loadData = async () => {\n    const res = await fetch('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false');\n    const data = await res.json(); // Convierto la respuesta a json\n    setCoins(data); // Relleno el array coins con lo datos extraidos del json\n   }\n   // await --> peticion asincrona. Para que funcione await, debe estar en una funcion async\n\n  useEffect(() => {\n     loadData();\n  }, []) //Lo ejecutamos con un array en blanco para avisarle que no esta basado en ningun cambio\n  // A penas cargue este componente App, se va a ejecutar lo que escribamos aca adentro\n\n  return (\n    <View style={styles.container}>\n      <StatusBar backgroundColor='#141414'/>\n      <View  style={styles.header}>\n        <Text style={styles.title}>Cryptomanía</Text>\n        <TextInput style={styles.searchInput}></TextInput>\n      </View>\n\n      <FlatList style={styles.list}\n        data={coins} // El componente recibe como datos el array coins\n        renderItem={({item}) => {\n          return <CoinItem coin={item}/> //a CoinItem le paso como parametro el item\n        }}  // renderItem me permite devolver uno a uno, c/u de los objetos que estan dentro del array. Es como la funcion MAP\n        // renderItem devuelve un obj q se llama item: y tiene un index, un item, y un separators\n        showsVerticalScrollIndicator = {false}\n      />\n\n    </View>\n  )\n}\n\nconst styles =  StyleSheet.create({\ncontainer:{\n  backgroundColor: '#141414',\n  alignItems: 'center',\n  flex: 1 // Para que me ocupe todo el tamanio de la pantalla\n},\ntitle:{\n   color: '#fff',\n   marginTop: 50,\n   fontSize: 20\n},\nlist:{\n   width: '90%' // Para que ocupe todo el ancho de la pantalla\n},\nheader:{\n  flexDirection: 'row',\n  justifyContent: 'space-between', // Para que 2 elementos de la misma row se separen a los extremos\n  width: '90%' // Para que ocupe todo el ancho de la pantalla\n},\nsearchInput:{\n  color: '#fff',\n  borderBottomColor: '#4657CE',\n  borderBottomWidth: 1,\n  width: '40%', // Va a ocupar un 40% del contenedor\n  textAlign: 'center'\n}\n})\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}