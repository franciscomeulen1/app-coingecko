{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\franc\\\\Desktop\\\\4to Cuatri - Da Vinci\\\\Aplicaciones M\\xF3viles\\\\app-coingecko\\\\App.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport CoinItem from \"./components/CoinItem\";\n\nvar App = function App() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      coins = _useState2[0],\n      setCoins = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      search = _useState4[0],\n      setSearch = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      refreshing = _useState6[0],\n      setRefreshing = _useState6[1];\n\n  var loadData = function loadData() {\n    var res, data;\n    return _regeneratorRuntime.async(function loadData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false'));\n\n          case 2:\n            res = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(res.json());\n\n          case 5:\n            data = _context.sent;\n            setCoins(data);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    loadData();\n  }, []);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, React.createElement(StatusBar, {\n    backgroundColor: \"#141414\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.header,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, \"Cryptoman\\xEDa\"), React.createElement(TextInput, {\n    style: styles.searchInput,\n    placeholder: \"Buscar Coin\",\n    placeholderTextColor: \"#858585\",\n    onChangeText: function onChangeText(text) {\n      return setSearch(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  })), React.createElement(FlatList, {\n    style: styles.list,\n    data: coins.filter(function (coin) {\n      return coin.name.toLowerCase().includes(search) || coin.symbol.toLowerCase().includes(search);\n    }),\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(CoinItem, {\n        coin: item,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 18\n        }\n      });\n    },\n    showsVerticalScrollIndicator: false,\n    refreshing: refreshing,\n    onRefresh: function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              setRefreshing(true);\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(loadData());\n\n            case 3:\n              setRefreshing(false);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#141414',\n    alignItems: 'center',\n    flex: 1\n  },\n  title: {\n    color: '#fff',\n    fontSize: 20\n  },\n  list: {\n    width: '90%'\n  },\n  header: {\n    flexDirection: 'row',\n    marginTop: 70,\n    marginBottom: 20,\n    justifyContent: 'space-between',\n    width: '90%'\n  },\n  searchInput: {\n    color: '#fff',\n    borderBottomColor: '#4657CE',\n    borderBottomWidth: 1,\n    width: '40%',\n    textAlign: 'center'\n  }\n});\nexport default App;","map":{"version":3,"sources":["C:/Users/franc/Desktop/4to Cuatri - Da Vinci/Aplicaciones Móviles/app-coingecko/App.js"],"names":["React","useEffect","useState","CoinItem","App","coins","setCoins","search","setSearch","refreshing","setRefreshing","loadData","fetch","res","json","data","styles","container","header","title","searchInput","text","list","filter","coin","name","toLowerCase","includes","symbol","item","StyleSheet","create","backgroundColor","alignItems","flex","color","fontSize","width","flexDirection","marginTop","marginBottom","justifyContent","borderBottomColor","borderBottomWidth","textAlign"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;;;AAIA,OAAOC,QAAP;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;AAGhB,kBAA0BF,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOG,KAAP;AAAA,MAAcC,QAAd;;AAEA,mBAA4BJ,QAAQ,CAAC,EAAD,CAApC;AAAA;AAAA,MAAOK,MAAP;AAAA,MAAeC,SAAf;;AACA,mBAAoCN,QAAQ,CAAC,KAAD,CAA5C;AAAA;AAAA,MAAOO,UAAP;AAAA,MAAmBC,aAAnB;;AAEA,MAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACGC,KAAK,CAAC,0HAAD,CADR;;AAAA;AACTC,YAAAA,GADS;AAAA;AAAA,6CAEIA,GAAG,CAACC,IAAJ,EAFJ;;AAAA;AAETC,YAAAA,IAFS;AAGfT,YAAAA,QAAQ,CAACS,IAAD,CAAR;;AAHe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAOAd,EAAAA,SAAS,CAAC,YAAM;AACdU,IAAAA,QAAQ;AACT,GAFQ,EAEN,EAFM,CAAT;AAKA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEK,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,eAAe,EAAC,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,MAAM,CAACG,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEH,MAAM,CAACI,WAAzB;AACE,IAAA,WAAW,EAAC,aADd;AAC4B,IAAA,oBAAoB,EAAC,SADjD;AAEE,IAAA,YAAY,EAAE,sBAAAC,IAAI;AAAA,aAAIb,SAAS,CAACa,IAAD,CAAb;AAAA,KAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAFF,EAUE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEL,MAAM,CAACM,IAAxB;AACE,IAAA,IAAI,EACFjB,KAAK,CAACkB,MAAN,CAAc,UAACC,IAAD;AAAA,aAAUA,IAAI,CAACC,IAAL,CAAUC,WAAV,GAAwBC,QAAxB,CAAiCpB,MAAjC,KAA4CiB,IAAI,CAACI,MAAL,CAAYF,WAAZ,GAA0BC,QAA1B,CAAmCpB,MAAnC,CAAtD;AAAA,KAAd,CAFJ;AAKE,IAAA,UAAU,EAAE,0BAAc;AAAA,UAAXsB,IAAW,QAAXA,IAAW;AACxB,aAAO,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAEA,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAPH;AAUE,IAAA,4BAA4B,EAAE,KAVhC;AAWE,IAAA,UAAU,EAAIpB,UAXhB;AAYE,IAAA,SAAS,EAAE;AAAA;AAAA;AAAA;AAAA;AACTC,cAAAA,aAAa,CAAC,IAAD,CAAb;AADS;AAAA,+CAEHC,QAAQ,EAFL;;AAAA;AAITD,cAAAA,aAAa,CAAC,KAAD,CAAb;;AAJS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAZb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF;AAiCD,CArDD;;AAuDA,IAAMM,MAAM,GAAGc,UAAU,CAACC,MAAX,CAAkB;AAC/Bd,EAAAA,SAAS,EAAE;AACTe,IAAAA,eAAe,EAAE,SADR;AAETC,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,IAAI,EAAE;AAHG,GADoB;AAM/Bf,EAAAA,KAAK,EAAE;AACLgB,IAAAA,KAAK,EAAE,MADF;AAELC,IAAAA,QAAQ,EAAE;AAFL,GANwB;AAU/Bd,EAAAA,IAAI,EAAE;AACJe,IAAAA,KAAK,EAAE;AADH,GAVyB;AAa/BnB,EAAAA,MAAM,EAAE;AACNoB,IAAAA,aAAa,EAAE,KADT;AAENC,IAAAA,SAAS,EAAE,EAFL;AAGNC,IAAAA,YAAY,EAAE,EAHR;AAINC,IAAAA,cAAc,EAAE,eAJV;AAKNJ,IAAAA,KAAK,EAAE;AALD,GAbuB;AAoB/BjB,EAAAA,WAAW,EAAE;AACXe,IAAAA,KAAK,EAAE,MADI;AAEXO,IAAAA,iBAAiB,EAAE,SAFR;AAGXC,IAAAA,iBAAiB,EAAE,CAHR;AAIXN,IAAAA,KAAK,EAAE,KAJI;AAKXO,IAAAA,SAAS,EAAE;AALA;AApBkB,CAAlB,CAAf;AA6BA,eAAexC,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\n// Cuando cargue la app, quiero hacer una peticion GET --> Usamos useEffect\nimport { View, Text, FlatList, StyleSheet, TextInput, StatusBar } from 'react-native'\n// El componente FlatList recibe un array y me permite recorrerlo de manera facil\nimport CoinItem from './components/CoinItem'\n\nconst App = () => {\n\n  //Creo un arreglo llamado coins. A ese arreglo lo va a rellenar la funcion setCoins. E inicialmente va a estar en blanco.\n  const [coins, setCoins] = useState([]);\n\n  const [search, setSearch] = useState('');\n  const [refreshing, setRefreshing] = useState(false); // // Constante para hacer un refresh de los datos de la app\n\n  const loadData = async () => {\n    const res = await fetch('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false');\n    const data = await res.json(); // Convierto la respuesta a json\n    setCoins(data); // Relleno el array coins con lo datos extraidos del json\n  }\n  // await --> peticion asincrona. Para que funcione await, debe estar en una funcion async\n\n  useEffect(() => {\n    loadData();\n  }, []) //Lo ejecutamos con un array en blanco para avisarle que no esta basado en ningun cambio\n  // A penas cargue este componente App, se va a ejecutar lo que escribamos aca adentro\n\n  return (\n    <View style={styles.container}>\n      <StatusBar backgroundColor='#141414' />\n      <View style={styles.header}>\n        <Text style={styles.title}>Cryptomanía</Text>\n        <TextInput style={styles.searchInput}\n          placeholder='Buscar Coin' placeholderTextColor='#858585'\n          onChangeText={text => setSearch(text)}>\n        </TextInput>\n      </View>\n\n      <FlatList style={styles.list}\n        data={\n          coins.filter( (coin) => coin.name.toLowerCase().includes(search) || coin.symbol.toLowerCase().includes(search))}\n        // Filtra en el array de cryptos mientras voy tipeando (por el nombre o por su abreviación)\n        // El componente recibe como datos el array coins\n        renderItem={({ item }) => {\n          return <CoinItem coin={item} /> //a CoinItem le paso como parametro el item\n        }}  // renderItem me permite devolver uno a uno, c/u de los objetos que estan dentro del array. Es como la funcion MAP\n        // renderItem devuelve un obj q se llama item: y tiene un index, un item, y un separators\n\n        showsVerticalScrollIndicator={false} // Ocultamos la barra de scroll\n        refreshing = {refreshing} // Permite hacer un refresh de los datos de la app\n        onRefresh={async () => {\n          setRefreshing(true);\n          await loadData(); //La funcion que trae los datos de la api\n          // await ya que una vez que termine de cargar los datos, va a setear el refresh en false\n          setRefreshing(false);\n        }}\n      />\n\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#141414',\n    alignItems: 'center',\n    flex: 1 // Para que me ocupe todo el tamanio de la pantalla\n  },\n  title: {\n    color: '#fff',\n    fontSize: 20\n  },\n  list: {\n    width: '90%' // Para que ocupe todo el ancho de la pantalla\n  },\n  header: {\n    flexDirection: 'row',\n    marginTop: 70,\n    marginBottom: 20,\n    justifyContent: 'space-between', // Para que 2 elementos de la misma row se separen a los extremos\n    width: '90%' // Para que ocupe todo el ancho de la pantalla\n  },\n  searchInput: {\n    color: '#fff',\n    borderBottomColor: '#4657CE',\n    borderBottomWidth: 1,\n    width: '40%', // Va a ocupar un 40% del contenedor\n    textAlign: 'center'\n  }\n})\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}