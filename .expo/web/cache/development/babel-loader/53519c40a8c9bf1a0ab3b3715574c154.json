{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\franc\\\\Desktop\\\\4to Cuatri - Da Vinci\\\\Aplicaciones M\\xF3viles\\\\app-coingecko\\\\Screens\\\\CriptosScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\n\nvar axios = require('axios').default;\n\nimport CoinItem from \"../components/CoinItem\";\nexport var CriptosScreen = function (_Component) {\n  _inherits(CriptosScreen, _Component);\n\n  var _super = _createSuper(CriptosScreen);\n\n  function CriptosScreen(props) {\n    var _this;\n\n    _classCallCheck(this, CriptosScreen);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      coins: [],\n      search: '',\n      refreshing: false\n    };\n\n    _this.loadData();\n\n    return _this;\n  }\n\n  _createClass(CriptosScreen, [{\n    key: \"setCoins\",\n    value: function setCoins(jsonCoins) {\n      this.setState({\n        coins: jsonCoins\n      });\n    }\n  }, {\n    key: \"setSearch\",\n    value: function setSearch(text) {\n      this.setState({\n        search: text\n      });\n    }\n  }, {\n    key: \"setRefreshing\",\n    value: function setRefreshing(boolean) {\n      this.setState({\n        refreshing: boolean\n      });\n    }\n  }, {\n    key: \"loadData\",\n    value: function loadData() {\n      var _this2 = this;\n\n      axios.get('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false').then(function (resp) {\n        return _this2.setCoins(resp.data);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }\n      }, React.createElement(StatusBar, {\n        backgroundColor: \"#141414\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }\n      }), React.createElement(View, {\n        style: styles.header,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }\n      }, \"Cryptoman\\xEDa\"), React.createElement(TextInput, {\n        style: styles.searchInput,\n        placeholder: \"Buscar Coin\",\n        placeholderTextColor: \"#858585\",\n        onChangeText: function onChangeText(text) {\n          return _this3.setSearch(text);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }\n      })), React.createElement(FlatList, {\n        style: styles.list,\n        data: this.state.coins.filter(function (coin) {\n          return coin.name.toLowerCase().includes(_this3.state.search) || coin.symbol.toLowerCase().includes(_this3.state.search);\n        }),\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return React.createElement(CoinItem, {\n            coin: item,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 22\n            }\n          });\n        },\n        showsVerticalScrollIndicator: false,\n        refreshing: this.state.refreshing,\n        onRefresh: function _callee() {\n          return _regeneratorRuntime.async(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  setRefreshing(true);\n                  _context.next = 3;\n                  return _regeneratorRuntime.awrap(loadData());\n\n                case 3:\n                  setRefreshing(false);\n\n                case 4:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, null, null, null, Promise);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }\n      }));\n    }\n  }]);\n\n  return CriptosScreen;\n}(Component);\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#141414',\n    alignItems: 'center',\n    flex: 1\n  },\n  title: {\n    color: '#fff',\n    fontSize: 20\n  },\n  list: {\n    width: '90%'\n  },\n  header: {\n    flexDirection: 'row',\n    marginTop: 25,\n    marginBottom: 20,\n    justifyContent: 'space-between',\n    width: '90%'\n  },\n  searchInput: {\n    color: '#fff',\n    borderBottomColor: '#4657CE',\n    borderBottomWidth: 1,\n    width: '40%',\n    textAlign: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/franc/Desktop/4to Cuatri - Da Vinci/Aplicaciones MÃ³viles/app-coingecko/Screens/CriptosScreen.js"],"names":["React","Component","axios","require","default","CoinItem","CriptosScreen","props","state","coins","search","refreshing","loadData","jsonCoins","setState","text","boolean","get","then","resp","setCoins","data","styles","container","header","title","searchInput","setSearch","list","filter","coin","name","toLowerCase","includes","symbol","item","setRefreshing","StyleSheet","create","backgroundColor","alignItems","flex","color","fontSize","width","flexDirection","marginTop","marginBottom","justifyContent","borderBottomColor","borderBottomWidth","textAlign"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n// Cuando cargue la app, quiero hacer una peticion GET --> Usamos useEffect\r\nimport { View, Text, FlatList, StyleSheet, TextInput, StatusBar } from 'react-native';\r\n// El componente FlatList recibe un array y me permite recorrerlo de manera facil\r\nconst axios = require('axios').default;\r\nimport CoinItem from '../components/CoinItem';\r\n\r\nexport class CriptosScreen extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { coins: [], search: '', refreshing: false };\r\n      this.loadData();\r\n    }\r\n    setCoins(jsonCoins) {\r\n      this.setState({ coins: jsonCoins });\r\n    }\r\n    setSearch(text) {\r\n      this.setState({ search: text });\r\n    }\r\n    setRefreshing(boolean) {\r\n      this.setState({ refreshing: boolean });\r\n    }\r\n  \r\n    loadData() {\r\n      axios.get('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false')\r\n        .then(resp => this.setCoins(resp.data));\r\n    }\r\n    render() {\r\n      return (\r\n        <View style={styles.container}>\r\n          <StatusBar backgroundColor='#141414' />\r\n          <View style={styles.header}>\r\n            <Text style={styles.title}>CryptomanÃ­a</Text>\r\n            <TextInput style={styles.searchInput}\r\n              placeholder='Buscar Coin' placeholderTextColor='#858585'\r\n              onChangeText={text => this.setSearch(text)}>\r\n            </TextInput>\r\n          </View>\r\n  \r\n          <FlatList style={styles.list}\r\n            data={\r\n              this.state.coins.filter((coin) => coin.name.toLowerCase().includes(this.state.search) || coin.symbol.toLowerCase().includes(this.state.search))}\r\n            // Filtra en el array de cryptos mientras voy tipeando (por el nombre o por su abreviaciÃ³n)\r\n            // El componente recibe como datos el array coins\r\n            renderItem={({ item }) => {\r\n              return <CoinItem coin={item} /> //a CoinItem le paso como parametro el item\r\n            }}  // renderItem me permite devolver uno a uno, c/u de los objetos que estan dentro del array. Es como la funcion MAP\r\n            // renderItem devuelve un obj q se llama item: y tiene un index, un item, y un separators\r\n  \r\n            showsVerticalScrollIndicator={false} // Ocultamos la barra de scroll\r\n            refreshing={this.state.refreshing} // Permite hacer un refresh de los datos de la app\r\n            onRefresh={async () => {\r\n              setRefreshing(true);\r\n              await loadData(); //La funcion que trae los datos de la api\r\n              // await ya que una vez que termine de cargar los datos, va a setear el refresh en false\r\n              setRefreshing(false);\r\n            }}\r\n          />\r\n  \r\n        </View>\r\n      )\r\n    }\r\n  }\r\n\r\n  const styles = StyleSheet.create({\r\n    container: {\r\n      backgroundColor: '#141414',\r\n      alignItems: 'center',\r\n      flex: 1 // Para que me ocupe todo el tamanio de la pantalla\r\n    },\r\n    title: {\r\n      color: '#fff',\r\n      fontSize: 20\r\n    },\r\n    list: {\r\n      width: '90%' // Para que ocupe todo el ancho de la pantalla\r\n    },\r\n    header: {\r\n      flexDirection: 'row',\r\n      marginTop: 25,\r\n      marginBottom: 20,\r\n      justifyContent: 'space-between', // Para que 2 elementos de la misma row se separen a los extremos\r\n      width: '90%' // Para que ocupe todo el ancho de la pantalla\r\n    },\r\n    searchInput: {\r\n      color: '#fff',\r\n      borderBottomColor: '#4657CE',\r\n      borderBottomWidth: 1,\r\n      width: '40%', // Va a ocupar un 40% del contenedor\r\n      textAlign: 'center'\r\n    }\r\n  })"]},"metadata":{},"sourceType":"module"}